name: Elixir CI

on: push

jobs:
  compile:
    runs-on: ubuntu-latest
    container:
      image: elixir:1.9.4-slim
    env:
      MIX_ENV: prod
    steps:
      - uses: actions/checkout@v1
      - name: install dependencies
        run: |
          mix local.rebar --force
          mix local.hex --force
          mix deps.get --only prod
      - name: compile
        run: mix compile --force

  test:
    runs-on: ubuntu-latest
    container:
      image: elixir:1.9.4-slim
    env:
      MIX_ENV: test
    steps:
      - uses: actions/checkout@v1
      - name: install dependencies
        run: |
          mix local.rebar --force
          mix local.hex --force
          mix deps.get --only test
      - name: test
        run: mix test --cover --trace
      - name: archive code coverage
        uses: actions/upload-artifact@v1
        with:
          name: cover
          path: cover

  static_code_analysis:
    runs-on: ubuntu-latest
    container:
      image: elixir:1.9.4-slim
    env:
      MIX_ENV: dev
    steps:
      - uses: actions/checkout@v1
      - name: install dependencies
        run: |
          mix local.rebar --force
          mix local.hex --force
          mix deps.get --only dev
      - name: plt cache
        uses: actions/cache@v1.1.0
        with:
          path: _build
          key: ${{ runner.os }}-plt-${{ env.GITHUB_REF }}
          restore-keys: |
            ${{ runner.os }}-plt-
      - name: formatted?
        run: mix format --check-formatted --dry-run
      - name: credo
        run: mix credo --verbose
      - name: gradient
        run: mix gradient
      - name: dialyzer
        run: mix dialyzer --halt-exit-status
